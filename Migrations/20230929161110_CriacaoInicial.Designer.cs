// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sistema_Eventos.Data;

#nullable disable

namespace Sistema_Eventos.Migrations
{
    [DbContext(typeof(SistemaEventosDbContext))]
    [Migration("20230929161110_CriacaoInicial")]
    partial class CriacaoInicial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.11");

            modelBuilder.Entity("Sistema_Eventos.Models.Atuante", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OrganizadorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("nome")
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.HasIndex("OrganizadorId");

                    b.ToTable("Atuante");
                });

            modelBuilder.Entity("Sistema_Eventos.Models.Evento", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Evento");
                });

            modelBuilder.Entity("Sistema_Eventos.Models.Kit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Eventoid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OrganizadorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("preco")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("Eventoid");

                    b.HasIndex("OrganizadorId");

                    b.ToTable("Kit");
                });

            modelBuilder.Entity("Sistema_Eventos.Models.Local", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OrganizadorId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("capacidade")
                        .HasColumnType("INTEGER");

                    b.Property<string>("endereco")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("OrganizadorId");

                    b.ToTable("Local");
                });

            modelBuilder.Entity("Sistema_Eventos.Models.Organizador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Organizador");
                });

            modelBuilder.Entity("Sistema_Eventos.Models.Plano", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Eventoid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OrganizadorId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Usuarioid")
                        .HasColumnType("INTEGER");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("preco")
                        .HasColumnType("REAL");

                    b.HasKey("id");

                    b.HasIndex("Eventoid");

                    b.HasIndex("OrganizadorId");

                    b.HasIndex("Usuarioid");

                    b.ToTable("Plano");
                });

            modelBuilder.Entity("Sistema_Eventos.Models.Produto", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("Eventoid")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("KitId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("OrganizadorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("descricao")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<float>("preco")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.HasIndex("Eventoid");

                    b.HasIndex("KitId");

                    b.HasIndex("OrganizadorId");

                    b.ToTable("Produto");
                });

            modelBuilder.Entity("Sistema_Eventos.Models.Usuario", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("cpf")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateOnly>("dataNascimento")
                        .HasColumnType("TEXT");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("nome")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("senha")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("id");

                    b.ToTable("Usuario");
                });

            modelBuilder.Entity("Sistema_Eventos.Models.Atuante", b =>
                {
                    b.HasOne("Sistema_Eventos.Models.Organizador", null)
                        .WithMany("atuantes")
                        .HasForeignKey("OrganizadorId");
                });

            modelBuilder.Entity("Sistema_Eventos.Models.Kit", b =>
                {
                    b.HasOne("Sistema_Eventos.Models.Evento", null)
                        .WithMany("kits")
                        .HasForeignKey("Eventoid");

                    b.HasOne("Sistema_Eventos.Models.Organizador", null)
                        .WithMany("kits")
                        .HasForeignKey("OrganizadorId");
                });

            modelBuilder.Entity("Sistema_Eventos.Models.Local", b =>
                {
                    b.HasOne("Sistema_Eventos.Models.Organizador", null)
                        .WithMany("locais")
                        .HasForeignKey("OrganizadorId");
                });

            modelBuilder.Entity("Sistema_Eventos.Models.Plano", b =>
                {
                    b.HasOne("Sistema_Eventos.Models.Evento", null)
                        .WithMany("planos")
                        .HasForeignKey("Eventoid");

                    b.HasOne("Sistema_Eventos.Models.Organizador", null)
                        .WithMany("planos")
                        .HasForeignKey("OrganizadorId");

                    b.HasOne("Sistema_Eventos.Models.Usuario", null)
                        .WithMany("planos")
                        .HasForeignKey("Usuarioid");
                });

            modelBuilder.Entity("Sistema_Eventos.Models.Produto", b =>
                {
                    b.HasOne("Sistema_Eventos.Models.Evento", null)
                        .WithMany("produtos")
                        .HasForeignKey("Eventoid");

                    b.HasOne("Sistema_Eventos.Models.Kit", null)
                        .WithMany("produtos")
                        .HasForeignKey("KitId");

                    b.HasOne("Sistema_Eventos.Models.Organizador", null)
                        .WithMany("produtos")
                        .HasForeignKey("OrganizadorId");
                });

            modelBuilder.Entity("Sistema_Eventos.Models.Evento", b =>
                {
                    b.Navigation("kits");

                    b.Navigation("planos");

                    b.Navigation("produtos");
                });

            modelBuilder.Entity("Sistema_Eventos.Models.Kit", b =>
                {
                    b.Navigation("produtos");
                });

            modelBuilder.Entity("Sistema_Eventos.Models.Organizador", b =>
                {
                    b.Navigation("atuantes");

                    b.Navigation("kits");

                    b.Navigation("locais");

                    b.Navigation("planos");

                    b.Navigation("produtos");
                });

            modelBuilder.Entity("Sistema_Eventos.Models.Usuario", b =>
                {
                    b.Navigation("planos");
                });
#pragma warning restore 612, 618
        }
    }
}
